---
################################
## WIP: Custom Testing Action ##
################################

name: RSpec

on: [push pull_request]
on:
  push:
    # branches-ignore: [main]
    # Remove the line above to run when pushing to master
  pull_request:
    branches: [main]

jobs:
  rspec:
    name: Rspec - App
    runs-on: ubuntu-18.04
    container:
      # image: ubuntu:bionic
      image: ruby:2.7.2
    # shared env varaibles
    env:
      BUNDLE_PATH: vendor/bundle
      ImageOS: ubuntu18 # should not need this; trying to work around ruby setup bug
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: cid_test
      DATABASE_HOST: postgres_service # must match service name, below
      RAILS_ENV: test

    services:
      # Note: this name/label has to be passed to the rails app as the db host
      postgres_service:
        image: postgres:13.2
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cid_test
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:

      - name: get yarn keys
        run: >-
          curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -

      - name: install yarn keys
        run: >-
          echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list

      - name: install PostgreSQL client & other app resources
        run: >-
          apt-get update -qq &&
          apt-get install -y --no-install-recommends
          libpq-dev
          libxml2-dev
          libxslt-dev
          nodejs
          yarn

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - id: changed_files
        uses: jitterbit/get-changed-files@v1

      - name: Identify tests to run
        run: |
          for changed_file in ${{ steps.changed_files.outputs.all }}; do
              case "$changed_file" in
                  app/models/*) echo "TRIGGER_TEST_MODEL=true" >> $GITHUB_ENV
                  echo "$changed_file triggered model test"
                  ;;
                  app/controllers/*) echo "TRIGGER_TEST_CTRLS=true" >> $GITHUB_ENV
                  echo "$changed_file triggered controller test"
                  ;;
                  public/*)
                  ;;
                  README*) echo "Skipping README"
                  ;;
                  *) echo "TRIGGER_TEST_ALL=true" >> $GITHUB_ENV
                  echo "$changed_file triggered full test"
                  ;;
              esac
          done


      #     echo "TRIGGER_TEST_MODEL=true" >> $GITHUB_ENV
      #     TTM='set'
      # elif [[ ${changed_file} =~ app\\controllers && -z ${TTC+x} ]]; then
      #     echo "TRIGGER_TEST_CTRLS=true" >> $GITHUB_ENV
      #     TTC='set'
      # elif [[ -z ${TTA+x} ]]; then
      #     echo "TRIGGER_TEST_ALL=true" >> $GITHUB_ENV

      # - name: Set up Ruby
      #   uses: ruby/setup-ruby@v1
      #   with:
      #     # uses .ruby-version
      #     bundler-cache: true

      - name: Install gems and set up app
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          bundle exec rails db:setup
          bundle exec rails webpacker:install
          bundle exec rails webpacker:compile

      - name: Test Models
        if: env.TRIGGER_TEST_MODELS == 'true'
        run: |
          echo "Testing Models"
          bundle exec rspec spec/models/

      - name: Test Controllers
        if: env.TRIGGER_TEST_CTRLS == 'true'
        run: |
          echo "Testing Controllers"
          bundle exec rspec spec/views/

      - name: Test All
        if: env.TRIGGER_TEST_ALL == 'true'
        run: |
          echo "Testing ALL"
          bundle exec rspec spec
